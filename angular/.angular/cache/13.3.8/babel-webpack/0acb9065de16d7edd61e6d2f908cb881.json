{"ast":null,"code":"import _asyncToGenerator from \"/Users/wnoack/Documents/TWK/2022/AplicacionesMoviles/postNote/angular/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nlet NotesComponent = class NotesComponent {\n  constructor(_notesService) {\n    var _this = this;\n\n    this._notesService = _notesService;\n    this.title = 'postNotes';\n    this.modalTitle = 'Crear nota';\n    this.isEditNote = false;\n    this.idNote = 0;\n    this.isSearch = false;\n    this.noteName = '';\n    this.noteBody = '';\n    this.postNotes = [];\n\n    this.addNotes = () => {\n      this._notesService.addNotes(this.noteName, this.noteBody).subscribe({\n        next: function () {\n          var _ref = _asyncToGenerator(function* (data) {\n            yield _this.postNotes.push({\n              noteName: data.note.noteName,\n              noteBody: data.note.noteBody,\n              _id: data.note._id\n            });\n            console.log(data);\n          });\n\n          return function next(_x) {\n            return _ref.apply(this, arguments);\n          };\n        }(),\n        error: error => {\n          console.log(error);\n        }\n      }); // if (!this.isEditNote) {\n      //   this.postNotes.push({\n      //     noteName: this.noteName,\n      //     noteBody: this.noteBody,\n      //     inputDate: new Date(),\n      //   });\n      // } else {\n      //   this.postNotes[this.idNote ?? 0] = {\n      //     noteName: this.noteName,\n      //     noteBody: this.noteBody,\n      //     inputDate: new Date(),\n      //   }\n      // }\n      // console.log(this.noteName, new Date().toLocaleDateString(), new Date().toLocaleTimeString())\n      // this.backupData();\n      // this.clearModal();\n\n    };\n\n    this.clearModal = () => {\n      this.noteName = '';\n      this.noteBody = '';\n      this.isEdit(false);\n    };\n\n    this.backupData = () => {\n      sessionStorage.setItem('postNotes', JSON.stringify(this.postNotes));\n    };\n\n    this.restoreData = () => {\n      this.postNotes = JSON.parse(sessionStorage.getItem('postNotes') || '');\n    };\n\n    this.isEdit = (isEditData, idNote) => {\n      if (isEditData) {\n        this.idNote = idNote !== null && idNote !== void 0 ? idNote : 0;\n        this.isEditNote = true;\n        this.setModalEdit();\n      } else {\n        this.isEditNote = false;\n        this.modalTitle = 'Crear nota';\n      }\n    };\n\n    this.setModalEdit = () => {\n      var _a, _b;\n\n      this.modalTitle = 'Editar nota';\n      this.noteName = this.postNotes[(_a = this.idNote) !== null && _a !== void 0 ? _a : 0].noteName;\n      this.noteBody = this.postNotes[(_b = this.idNote) !== null && _b !== void 0 ? _b : 0].noteBody;\n    };\n\n    this.setDeleteIdNote = idNote => {\n      this.idNote = this.idNote;\n    };\n\n    this.deleteNote = () => {\n      this.postNotes.splice(this.idNote, 1);\n      this.backupData();\n    };\n\n    this.searchNote = () => {\n      this.isSearch = true;\n      this.postNotes = this.postNotes.filter(elem => {\n        return elem.noteName.includes(this.noteName);\n      });\n    };\n\n    this.isSearchNote = () => {\n      this.isSearch = false;\n      this.noteName = '';\n      this.restoreData();\n    };\n\n    this.sortAsc = () => {\n      this.postNotes.sort(function (a, b) {\n        if (a.noteName > b.noteName) {\n          return 1;\n        }\n\n        if (a.noteName < b.noteName) {\n          return -1;\n        }\n\n        return 0;\n      });\n    };\n\n    this.sortDesc = () => {\n      this.postNotes.sort(function (a, b) {\n        if (a.noteName < b.noteName) {\n          return 1;\n        }\n\n        if (a.noteName > b.noteName) {\n          return -1;\n        }\n\n        return 0;\n      });\n    };\n  }\n\n  ngOnInit() {}\n\n};\nNotesComponent = __decorate([Component({\n  selector: 'app-notes',\n  templateUrl: './notes.component.html',\n  styleUrls: ['./notes.component.css']\n})], NotesComponent);\nexport { NotesComponent };","map":{"version":3,"sources":["/Users/wnoack/Documents/TWK/2022/AplicacionesMoviles/postNote/angular/src/app/notes/notes.component.ts"],"names":["__decorate","Component","NotesComponent","constructor","_notesService","title","modalTitle","isEditNote","idNote","isSearch","noteName","noteBody","postNotes","addNotes","subscribe","next","data","push","note","_id","console","log","error","clearModal","isEdit","backupData","sessionStorage","setItem","JSON","stringify","restoreData","parse","getItem","isEditData","setModalEdit","_a","_b","setDeleteIdNote","deleteNote","splice","searchNote","filter","elem","includes","isSearchNote","sortAsc","sort","a","b","sortDesc","ngOnInit","selector","templateUrl","styleUrls"],"mappings":"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","sourcesContent":["import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nlet NotesComponent = class NotesComponent {\n    constructor(_notesService) {\n        this._notesService = _notesService;\n        this.title = 'postNotes';\n        this.modalTitle = 'Crear nota';\n        this.isEditNote = false;\n        this.idNote = 0;\n        this.isSearch = false;\n        this.noteName = '';\n        this.noteBody = '';\n        this.postNotes = [];\n        this.addNotes = () => {\n            this._notesService.addNotes(this.noteName, this.noteBody).subscribe({\n                next: async (data) => {\n                    await this.postNotes.push({\n                        noteName: data.note.noteName,\n                        noteBody: data.note.noteBody,\n                        _id: data.note._id,\n                    });\n                    console.log(data);\n                },\n                error: error => {\n                    console.log(error);\n                }\n            });\n            // if (!this.isEditNote) {\n            //   this.postNotes.push({\n            //     noteName: this.noteName,\n            //     noteBody: this.noteBody,\n            //     inputDate: new Date(),\n            //   });\n            // } else {\n            //   this.postNotes[this.idNote ?? 0] = {\n            //     noteName: this.noteName,\n            //     noteBody: this.noteBody,\n            //     inputDate: new Date(),\n            //   }\n            // }\n            // console.log(this.noteName, new Date().toLocaleDateString(), new Date().toLocaleTimeString())\n            // this.backupData();\n            // this.clearModal();\n        };\n        this.clearModal = () => {\n            this.noteName = '';\n            this.noteBody = '';\n            this.isEdit(false);\n        };\n        this.backupData = () => {\n            sessionStorage.setItem('postNotes', JSON.stringify(this.postNotes));\n        };\n        this.restoreData = () => {\n            this.postNotes = JSON.parse(sessionStorage.getItem('postNotes') || '');\n        };\n        this.isEdit = (isEditData, idNote) => {\n            if (isEditData) {\n                this.idNote = idNote !== null && idNote !== void 0 ? idNote : 0;\n                this.isEditNote = true;\n                this.setModalEdit();\n            }\n            else {\n                this.isEditNote = false;\n                this.modalTitle = 'Crear nota';\n            }\n        };\n        this.setModalEdit = () => {\n            var _a, _b;\n            this.modalTitle = 'Editar nota';\n            this.noteName = this.postNotes[(_a = this.idNote) !== null && _a !== void 0 ? _a : 0].noteName;\n            this.noteBody = this.postNotes[(_b = this.idNote) !== null && _b !== void 0 ? _b : 0].noteBody;\n        };\n        this.setDeleteIdNote = (idNote) => {\n            this.idNote = this.idNote;\n        };\n        this.deleteNote = () => {\n            this.postNotes.splice(this.idNote, 1);\n            this.backupData();\n        };\n        this.searchNote = () => {\n            this.isSearch = true;\n            this.postNotes = this.postNotes.filter((elem) => {\n                return elem.noteName.includes(this.noteName);\n            });\n        };\n        this.isSearchNote = () => {\n            this.isSearch = false;\n            this.noteName = '';\n            this.restoreData();\n        };\n        this.sortAsc = () => {\n            this.postNotes.sort(function (a, b) {\n                if (a.noteName > b.noteName) {\n                    return 1;\n                }\n                if (a.noteName < b.noteName) {\n                    return -1;\n                }\n                return 0;\n            });\n        };\n        this.sortDesc = () => {\n            this.postNotes.sort(function (a, b) {\n                if (a.noteName < b.noteName) {\n                    return 1;\n                }\n                if (a.noteName > b.noteName) {\n                    return -1;\n                }\n                return 0;\n            });\n        };\n    }\n    ngOnInit() {\n    }\n};\nNotesComponent = __decorate([\n    Component({\n        selector: 'app-notes',\n        templateUrl: './notes.component.html',\n        styleUrls: ['./notes.component.css']\n    })\n], NotesComponent);\nexport { NotesComponent };\n"]},"metadata":{},"sourceType":"module"}